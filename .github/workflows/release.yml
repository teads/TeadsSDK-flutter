name: ðŸš€ Release a new plugin version
on: 
  workflow_dispatch:
    inputs:
      plugin:
        type: choice
        description: Plugin
        options:
        - teads_sdk_flutter
        - teads_admob_adapter
      version:
        description: Plugin version
        required: true
      changelog:
        description: Changelog (semicolon separated)
        required: true
jobs:
  release:
    name: Release ${{ github.event.inputs.plugin }} ${{ github.event.inputs.version }} 
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3
      - name: Set working directory
        id: working_directory
        run: |
          if [ ${{ github.event.inputs.plugin }} == "teads_sdk_flutter" ]; then
            echo "directory="packages/TeadsSDK"" >> $GITHUB_OUTPUT
          elif [ ${{ github.event.inputs.plugin }} == "teads_admob_adapter" ]; then
            echo "directory="packages/TeadsAdmobAdapter"" >> $GITHUB_OUTPUT
          fi
      - name: Update CHANGELOG.md
        working-directory: ${{ steps.working_directory.outputs.directory }}
        run: |
          sed -i '1i\\r' CHANGELOG.md
          IFS=';' read -ra changelogs <<< "${{ github.event.inputs.changelog }}"
          for i in "${changelogs[@]}"
          do
            sed -i '1i* '"${i}"'' CHANGELOG.md
          done
          sed -i '1i\\r' CHANGELOG.md
          sed -i '1i## ${{ github.event.inputs.version }}' CHANGELOG.md
      - name: yq - portable yaml processor
        uses: mikefarah/yq@v4.30.5
      - name: Bump versions
        working-directory: ${{ steps.working_directory.outputs.directory }}
        run: |
          yq -i '.version = "${{ github.event.inputs.version }}"' pubspec.yaml
      - name: Create and merge a release pull request
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git checkout -b release/${{ github.event.inputs.plugin }}_${{ github.event.inputs.version }}
          git add .
          git commit -m 'Release ${{ github.event.inputs.plugin }} ${{ github.event.inputs.version }}'
          git push --set-upstream origin release/${{ github.event.inputs.plugin }}_${{ github.event.inputs.version }}
          gh pr create --fill
          gh pr merge ${{ steps.create-pull-request.outputs.pull-request-number }} --admin 